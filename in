
enum node_type
{
	LEAF,
	INNER
};


const int N = 1e9;

typedef node_type Node;

extern void Func();

static void Sfunc()
{
	return 0;
}

int main(int argc, char *argv[])
{
	char *str = arg<:0:>;
	int i;
	/*for(i = 0; i < 10; i++)
	{
		printf("%d\n",i);
	}
	*/
	float f;
	while(i)
	{
		if(i > 5)
			printf("Too many\" %d\n",i);
		else
			printf("Too less\n");
		i--;
		i += 1;
		i >>= 1;
		i <<= 2;
		i /= 2;
		continue;
	}
	double d = 0.5;
	f = 0.1f;
	f = -0.1f;

	volatile short sDigit = 0xff;
	sDigit = -0xfa9Fe0;
	long long lDigit = 1000L;
	struct node_t node;
		
	lDigit = -1000L;

	puts('eeeeee.....\'');	
	
	int 2hello;
	
	register char r = 0;

	unsigned int j;
	for(j = 0; j < 10; j++)
	{
		if(j % 5)
			puts("mod");
		else if(j / 5)
			puts("div");
		else
			break;
	}
	return 0;
}
